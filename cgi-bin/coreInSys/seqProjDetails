#!/usr/bin/python


import cgi
link = cgi.FieldStorage()
import os,sys

CH=open("./cgi_header","r")
cgiHeader=CH.readlines()
CH.close()

HF=open("./template_top","r")
topLines=HF.readlines()
HF.close()

FF=open("./template_bottom","r")
bottomLines=FF.readlines()
FF.close()



from API.seqProj2array import seqProj2array
from API.seqProject import seqProject
from API.runQuery import runQuery
from API.getState import getState
from API.getRunByID import getRunByID
from PL_CONTROL.demux import demux
from PL_CONTROL.fastQC import fastQC
from PL_CONTROL.postAlignQC import postAlignQC

#print "<p>Loaded modules</p>"


for ch in cgiHeader:
        print ch[:-1]
for he in topLines:
	print he[:-1]



#print "<p>",link.keys(),"</p>"
projectID=link["projID"].value
#print "<p>ProjectID",projectID,"</p>"




DBquery="select parentID from typeLinker where childID="+projectID
res=runQuery(DBquery)
if len(res)==0:
	print "<p>This sequencing project isn't linked to any master project.</p>"
else:
	print "<p>This sequencing project is linked to the following master projects:</p>"
	#print "<p>",res,"</p>"
	print "<p>"
	for mp in range(0,len(res)):
		DBquery="select projectName from masterProject where masterProjectID="+str(res[mp][0])
		#print DBquery
		mPres=runQuery(DBquery)
		print '<a href="/cgi-bin/coreInSys/getProjectFromDB.cgi?projName='+str(mPres[0][0])+'&projID='+str(res[mp][0])+'">'+str(mPres[0][0])+'</a><br>'
	print "</p>"

status=getState("sequencing",projectID)

print "<p>Project status: <a href='/cgi-bin/coreInSys/status?type=sequencing&itemID="+str(projectID)+"'><img src='/CoreInSys/images/status_"+status+".gif' alt='status_"+status+"' ></a></p>"

#for fo in bottomLines:
#        print fo[:-1]

#sys.exit()



#setup the seqProject
i=seqProject(0)
i.getSeqProjByID(projectID)

DBquery="select seqProject.seqRunID, seqRun.seqRunName from seqProject, seqRun  where seqProjectID="+projectID+" and seqProject.seqRunID=seqRun.seqRunID"

#print "<p>",DBquery,"</p>"
seqRunStuff=runQuery(DBquery)

#print "<p>",seqRunStuff,"</p>"


print "<p>This sequencing project belongs to sequencing run:"
print '<a href="/cgi-bin/coreInSys/getSeqRunFromDB.cgi?projID='+str(seqRunStuff[0][0])+'">'+seqRunStuff[0][1]+'</a>'
print "</p>"


#Get the IDs of all of the lanes in this project
laneDataIDs=i.getLaneDataIDs()
i.addLaneData()

#Work down to the lane layer
for la in range(0,len(laneDataIDs)):
	#add a lane instance
        if la>0 or len(i.lanes)==0:
        	if i.lanes[-1].laneID!="NULL":
                	i.addLaneData()

	i.lanes[-1].getLaneDataByID(laneDataIDs[la][0])

        sampleIDs=i.lanes[-1].getSampleIDs()
        #print sampleIDs
        i.lanes[-1].addSamples()
        #Now we move into the sample layer
        for sa in range(0,len(sampleIDs)):
        	#add a sample instance
                if sa>0 or len(i.lanes[-1].samples)==0:
                	if i.lanes[-1].samples[-1].sampleID!=0:
                        	i.lanes[-1].addSamples()

		i.lanes[-1].samples[-1].getSampleDataByID(sampleIDs[sa][0])





projArr=[]
projArr.append(i)
#print projArr



d=seqProj2array(projArr)

#print "<p>",d,"</p>"



print '<script>'
print 'function swapDisplayed(idA,idB){'
print '		var docA = document.getElementById(idA);'
print '		if (docA.style.display == "none")'
print '			docA.style.display = "inline";'
print '		var docB = document.getElementById(idB);'
print '                if (docB.style.display == "inline")'
print '                        docB.style.display = "none";'
print '	}'
print '</script>'



print "<hr>"
print "<h3>Sequencing Project Details</h3>"

print '<div id="runDetailsShown" style="display:inline">'
print """<a href="javascript:swapDisplayed('runDetailsHidden','runDetailsShown')">hide details</a> """ 
print "<script src='/CoreInSys/js/seqProjectTable.js'></script>"
print "<script>"
print d
print "experimentTable(runArr);"
print "</script>"
print '</div>'

print '<div id="runDetailsHidden" style="display:none">'
print """<a href="javascript:swapDisplayed('runDetailsShown','runDetailsHidden')">show details</a> """
print '</div>'

print '<script>'
print 'var contentCell=document.getElementById("content");'
print 'var runDetailsShown=document.getElementById("runDetailsShown");'
print 'var runDetailsHidden=document.getElementById("runDetailsHidden");'
print 'var contentCell.appendChild(runDetailsShown);'
print 'var contentCell.appendChild(runDetailsHidden);'
print '</script>'




"""
DBquery="select demuxID, sourceLocation, location, status from demultiplex where seqProjectID="+projectID
print "<p>",DBquery,"</p>"
res=runQuery(DBquery)
"""
#put demux stuff here
DBquery='select * from demultiplex where seqProjectID='+str(projectID)
#print "<p>",DBquery,"</p>"
demuxed=runQuery(DBquery)
#print demuxed
#demuxed="0"
print "<hr>"


#for fo in bottomLines:
#        print fo[:-1]

#sys.exit()



if len(demuxed)==0:
        print "<p>This sequencing project has not been demultiplexed using BioCIS</p>"
else:
        print "<h3>Demultiplexing:</h3>"
        #print "<p>",demuxed,"</p>"

        j=getRunByID(i.seqRunID)

	#for fo in bottomLines:
        #	print fo[:-1]

	#sys.exit()





        #print "<p>",j.seqRunID,"</p>"
        #print "<p>",j.dataLocation,"</p>"

        #os.environ['PATH']='/var/www/cgi-bin/coreInSys/PL_CONTROL'
        #from PL_CONTROL.demux import demux

	try:
        	dm=demux(i,j)
		dm.setDemuxType()
	except Exception:
		print "<p>Error - Unable to create deumux object instance.</p>"

	#for fo in bottomLines:
        #	print fo[:-1]
	#sys.exit()

	

	try:
        	dm.getDemuxStatus()
	except Exception:
		print "<p>Error - Unable to get demultiplexing status.</p>"

#for fo in bottomLines:
#        print fo[:-1]
#sys.exit()


print '<p><a href="/cgi-bin/coreInSys/demuxProject.cgi?projID='+str(projectID)+'">Demultiplex this project.</a></p>'

#for fo in bottomLines:
#        print fo[:-1]

#sys.exit()

#put fastQC stuff here
### ONLY LET IT RUN FASTQC IF THE SAMPLE FILE ACTUALLY EXISTS ###


DBquery='select * from fastQC where seqProjectID='+str(projectID)
#print "<p>",DBquery,"</p>"
fastQCed=runQuery(DBquery)
print "<hr>"

if len(fastQCed)==0:
        print "<p>FastQC has not been run on these samples using BioCIS</p>"

else:
        print "<h3>FastQC:</h3>"

        j=getRunByID(i.seqRunID)

	print '<div id="QCdetailsShown" style="display:inline">'
	print """<a href="javascript:swapDisplayed('QCdetailsHidden','QCdetailsShown')">hide details</a> """




        #os.environ['PATH']='/var/www/cgi-bin/coreInSys/PL_CONTROL'
        #from PL_CONTROL.fastQC import fastQC

        try:
                fq=fastQC(i,j)
        except Exception:
                print "<p>Error - Unable to create fastQC object instance.</p>"

        try:
		fq.setDemuxType()
                fq.establishPaths()
                fq.getFastQCStatus()
        except Exception:
                print "<p>EError - Unable to get fastQC status.</p>"


	print '</div>'

	print '<div id="QCdetailsHidden" style="display:none">'
	print """<a href="javascript:swapDisplayed('QCdetailsShown','QCdetailsHidden')">show details</a> """
	print '</div>'


print '<p><a href="/cgi-bin/coreInSys/fastQC.cgi?projID='+str(projectID)+'" onclick="return confirm('
print "'Are you sure you want to run fastQC on all samples?'"
print ')">Run FastQC on the samples in sequencing project.</a></p>'


DBquery='select * from  postAlignQC where seqProjectID='+str(projectID)
#print "<p>",DBquery,"</p>"
pAQC=runQuery(DBquery)
print "<hr>"

if len(pAQC)==0:
	print '<p><a href="/cgi-bin/coreInSys/postAlignQC.cgi?projID='+str(projectID)+'" onclick="return confirm('
	print "'Are you sure you want to set up post alignment QC?'"
	print ')">Setup post alignmentQC paths.</a></p>'
else:
	try:
		pq=postAlignQC(i,j)
	except Exception:
                print "<p>Error - Unable to create postAlignQC object instance.</p>"
	print "<table><tr><th>Post Alignment QC directory:</th><td>"+pq.postAlignQCdir+"</td></tr></table>"
	#pq.makeLinksToFiles()


print "<br>"
print "<br><hr>"
print "<h3>sftp Access:</h3>"


from PL_CONTROL.sftpTransfer import sftpTransfer




ST=sftpTransfer()
ST.seqProjectID=projectID
ST.genUsername()

ST.loadSftpByUsername()




if ST.sftpAccountID==0:
	print '<p><a href="/cgi-bin/coreInSys/sftpSetup?seqProjectID='+str(ST.seqProjectID)+'">Create an sftp account.</p>'
else:
	if ST.accountStatus=="deleted":
		print """<p>This account has been deleted. <a href="/cgi-bin/coreInSys/sftpRestore?seqProjectID="""+str(ST.seqProjectID)+"""&username="""+ST.username+"""" onclick="return confirm('Are you sure you want to restore this account?')"> Click here </a>to restore it.</p>"""
		print "<br><br>"
	else:
		print '<p>An sftp account with the name '+ST.username+' exists, with status "'+ST.accountStatus+'"</p>'
	if ST.accountStatus=="created": 

		ST.setTransfer()
		


		if ST.transferID!=0:
        		print "<p>This transfer exists in the database with transferID "+str(ST.transferID)+" and location "+ST.transLocation+".</p>"
			if ST.dataStatus=="":
				print "<p>dataStatus=NULL</p>"
			else:
				print "<p>dataStatus="+ST.dataStatus+"</p>"
			if ST.dataStatus=="sftp":
				print '<p>'
				print '<form method="post" action="/cgi-bin/coreInSys/resetPswd">'
                       		print '<input type="hidden" name="username" value="'+ST.username+'">'
                        	print '<input  type="hidden" name="seqProjectID" value="'+str(ST.seqProjectID)+'">'
                        	print """<input type="submit" value="Set the password." onclick="return confirm('This will replace any existing password.')">"""
                        	print '</form>'
				print '</p>'


		if ST.dataStatus!="sftp":
			print '<form method="post" action="/cgi-bin/coreInSys/migrateData">'
			print '<input type="hidden" name="username" value="'+ST.username+'">'
			print '<input  type="hidden" name="seqProjectID" value="'+str(ST.seqProjectID)+'">'
			print """<input type="submit" value="Migrate data to sftp account." onclick="return confirm('This will move the data to the sftp area. Please make sure that demultiplexing and QC have finished before pressing OK to proceeding.')">"""
			print '</form>'

			print '<form method="post" action="/cgi-bin/coreInSys/sftpAccountDel">'
                        print '<input type="hidden" name="username" value="'+ST.username+'">'
                        print '<input  type="hidden" name="seqProjectID" value="'+str(ST.seqProjectID)+'">'
                        print """<input type="submit" value="Delete sftp account." onclick="return confirm('This will delete the sftp account for this seq project and any of its files still in the sftp area.')">"""
                        print '</form>'

		
		else:
			print '<form method="post" action="/cgi-bin/coreInSys/restoreToOrigin">'
                        print '<input type="hidden" name="username" value="'+ST.username+'">'
                        print '<input  type="hidden" name="seqProjectID" value="'+str(ST.seqProjectID)+'">'
                        print """<input type="submit" value="Restore data to origin." onclick="return confirm('This will move the data from the sftp area back to the biocis area.')">"""
                        print '</form>'




for fo in bottomLines:
	print fo[:-1]




